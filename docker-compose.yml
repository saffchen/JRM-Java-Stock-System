version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  akhq:
    image: tchiotludo/akhq
    container_name: kafka_gui
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "broker:29092"
    ports:
      - '9090:8080'
    depends_on:
      - broker
    restart: always

  postgres:
    image: postgres:14.4-alpine
    profiles:
      - dev
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "docker", "-U", "docker"]
      timeout: 20s
      interval: 5s
      retries: 5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - STOCK_DB_USER=docker
      - STOCK_DB_PASSWORD=docker
      - STOCK_DB_NAME=stock
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - '5432:5432'

  stock:
    profiles:
      - dev
    build: ./stock
    healthcheck:
      test: curl --silent http://localhost:8080/actuator/health | grep {\"status\":\"UP\"} || exit 1
      timeout: 20s
      interval: 10s
      retries: 5
    environment:
      - DB_HOST=postgres
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '8080:8080'

  postgres_test:
    image: postgres:14.4-alpine
    profiles:
      - test
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "docker", "-U", "docker" ]
      timeout: 20s
      interval: 5s
      retries: 5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - STOCK_DB_USER=docker
      - STOCK_DB_PASSWORD=docker
      - STOCK_DB_NAME=stock
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - '5433:5432'


  vue-app:
    profiles:
      - dev
    build: ./vue-app
    volumes:
      - npm-cache:/root/.npm
    depends_on:
      stock:
        condition: service_healthy
    ports:
      - '3000:3000'

volumes:
  npm-cache:
    external: false
