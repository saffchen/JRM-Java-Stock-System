version: '3.8'

services:
  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/

  kafka:
    image: ubuntu/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      ZOOKEEPER_HOST: zookeeper
      KAFKA_BROKER_ID: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  akhq:
    image: tchiotludo/akhq
    container_name: kafka_gui
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - '9090:8080'
    depends_on:
      - kafka
    restart: always

  postgres:
    image: postgres:14.4-alpine
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "docker", "-U", "docker"]
      timeout: 20s
      interval: 5s
      retries: 5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - STOCK_DB_USER=docker
      - STOCK_DB_PASSWORD=docker
      - STOCK_DB_NAME=stock
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - '5432:5432'

  stock:
    build: ./stock
    healthcheck:
      test: curl --silent http://localhost:8080/actuator/health | grep {\"status\":\"UP\"} || exit 1
      timeout: 20s
      interval: 10s
      retries: 5
    environment:
      - DB_HOST=postgres
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '8080:8080'

  vue-app:
    build: ./vue-app
    volumes:
      - npm-cache:/root/.npm
    depends_on:
      stock:
        condition: service_healthy
    ports:
      - '3000:3000'

volumes:
  npm-cache:
    external: false
